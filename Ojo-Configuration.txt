Hardware Configuration
----------------------

Role			Name		OS		DNS FQDN
-------------------------------------------------------------------------------
Access Box		access		Linux		access.ojo.net
Windows Box		windows		Windows 	windows.ojo.net
OpenStack Controller	control		Linux		control.ojo.net
OpenStack Network	network		Linux		network.ojo.net
OpenStack Compute1	c1		Linux		c1.ojo.net

Linux = CentOS 7 64 bit
Windows = Microsoft Windows 7 64 bit


Project India1 ("One")


10.1.60.10
  p1p1

 gateway (gw, dns, ntp, ftp)
 8GB RAM
 1TB HDD

   em1

10.10.10.10

		10.10.10.51	10.10.10.52	10.10.10.53	10.10.10.54
		em1		em1		em1		em1

		   m1		   m2		   m3		   m4
		12GB RAM	12GB RAM	12GB RAM	12GB RAM
		 1TB HDD	 1TB HDD	 1TB HDD	 1TB HDD

		p1p1		p1p1		p1p1		p1p1
		10.20.30.51	10.20.30.52	10.20.30.53	10.20.30.54



1. install centos on m1, m2, m3, m4

1. configure networking

	edit ipv4 configuration 
	edit gateway configuration
	enable networking
	reboot and verify that networking and gateway and routes are set 

1. disable selinux

	verify selinux status
	edit selinux configuration
	reboot and verify that selinux is disabled
x1. disable firewall

	save firewall rules
	stop firewall currently
	off ipv4 firewall from starting in future
	reboot and verify firewall is disabled

	repeat for ipv6 firewall
1. yum update

	disable fastestmirror yum plugin
	yum update

1. configure dns 

	point to local resolver with appropriate domain name

1. configure ntp

	point to local ntp server

1. configure password less ssh root access from m1 to m1, m2, m3, and m4

	create ssh keypair using the rsa algorithm 
	copy the public key to all machines 
	verify you can login to all machines without a password

	do this on all machines (it is a good exercise)

	so now we can ssh to any machine from any machine without a password

1. add hadoop account on all machines
	
	add user hadoop with password hadoop as part of group hadoop and wheel
	with userid 1000 and group 1000

	verify above by logging in 

1. configure hadoop account to have sudo permissions without a password

	enable wheel group to use sudo without a password

1.	Networking configuration
	set ip address :10.10.10.*
	set gateway: 10.10.10.10
	Subnet mask:255.255.255.0
	
	ifconfig -a

	netstat -rn

	service network start

	cd /etc/sysconfig/network-scripts/
	vi ifcfg-em1
		//Edit the configuration file
	cd /etc/sysconfig/
	vi network
		//edit gateway
	cd /etc/
	vi resolv.conf
		//Edit nameserver

	service network restart
	
	ping ip addr
	ping gateway
	ping 8.8.8.8
	ping krishna.com

	reboot and verify

2.	selinux status
	vi /etc/selinux.conf	********
		//set selinux= disabled
		//save and quit
	reboot and verify by
	getenforce

3.	service iptables save
	service iptables stop
	chkconfig iptables --list
	chkconfig iptables off
	chkconfig iptables --list
	service iptables save

	service ip6tables save
	service ip6tables stop
	chkconfig ip6tables --list
	chkconfig ip6tables off
	chkconfig ip6tables --list
	service ip6tables save
	
	reboot
4.	yum -y --disableplugin=fastestmirror update
		yum update /*nothing to update*/
	
	reboot
5	
	yum -y --disableplugin=fastestmirror install ntp
	yum -y --disableplugin=fastestmirror install git

	vi /etc/ntp.conf
	server 10.10.10.10 iburst # remove other servers
	service ntpd status
	service ntpd start
	service ntpd status

	chkconfig ntpd --list
	chkconfig ntpd on
	chkconfig ntpd --list

	ntpq -pn

	reboot and verify

6.	adduser dinesh 
		--user-group
		--uid 1001
		--groups wheel
		--create-home

	passwd dinesh
		dinesh

7. 	echo "%wheel ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers

	login dinesh accout
		id
		sudoid






Hadoop Stuff

0.  adduser hadoop
	--user-group
	--uid 2001
	--groups wheel
	--create-home

    password hadoop
	hadoop

   on another console verify you can login as hadoop with password id

   verify you are logged in as hadoop

   whoami

   you can also run 

   id
 
   note that wheel is your secondary group

   verify you can run super user command using sudo without specifying the password

   sudo id
   sudo service iptables status

1. enabled password less ssh

[hadoop@m1 ~]$ ssh-keygen -t rsa
Generating public/private rsa key pair.
Enter file in which to save the key (/home/hadoop/.ssh/id_rsa): 
Created directory '/home/hadoop/.ssh'.
Enter passphrase (empty for no passphrase): <ENTER>
Enter same passphrase again: <ENTER>
Your identification has been saved in /home/hadoop/.ssh/id_rsa.
Your public key has been saved in /home/hadoop/.ssh/id_rsa.pub.
The key fingerprint is:
29:82:31:39:b5:bd:89:f7:c5:d4:44:f7:30:59:3f:53 hadoop@m1.daddylabs.com
The key's randomart image is:
+--[ RSA 2048]----+
|    .      .o +oE|
|   o o     o ..+o|
|  = . .   . .  oo|
|   = . o +      o|
|  . o = S o      |
|     o o .       |
|        .        |
|                 |
|                 |
+-----------------+
[hadoop@m1 ~]$ 

2. enable password-less ssh logins to host m1


[hadoop@m1 ~]$ ping m1.daddylabs.com
PING m1.daddylabs.com (10.10.10.51) 56(84) bytes of data.
64 bytes from 10.10.10.51: icmp_seq=1 ttl=64 time=0.006 ms
64 bytes from 10.10.10.51: icmp_seq=2 ttl=64 time=0.014 ms
64 bytes from 10.10.10.51: icmp_seq=3 ttl=64 time=0.014 ms
^C
--- m1.daddylabs.com ping statistics ---
3 packets transmitted, 3 received, 0% packet loss, time 2758ms
rtt min/avg/max/mdev = 0.006/0.011/0.014/0.004 ms
[hadoop@m1 ~]$ ssh-copy-id 10.10.10.10
hadoop@10.10.10.10's password: 
[hadoop@m1 ~]$ ssh-copy-id 10.10.10.51
The authenticity of host '10.10.10.51 (10.10.10.51)' can't be established.
RSA key fingerprint is d9:6e:8e:39:18:da:cd:57:c1:fe:33:3b:9b:a2:74:45.
Are you sure you want to continue connecting (yes/no)? yes
Warning: Permanently added '10.10.10.51' (RSA) to the list of known hosts.
hadoop@10.10.10.51's password: 
Now try logging into the machine, with "ssh '10.10.10.51'", and check in:

  .ssh/authorized_keys

to make sure we haven't added extra keys that you weren't expecting.

[hadoop@m1 ~]$ ssh 10.10.10.51
Last login: Tue May 26 04:51:56 2015
[hadoop@m1 ~]$ logout
Connection to 10.10.10.51 closed.
[hadoop@m1 ~]$ ssh 10.10.10.51 hostname
m1.daddylabs.com
[hadoop@m1 ~]$ ssh m1.daddylabs.com
Last login: Tue May 26 04:57:08 2015 from 10.10.10.51
[hadoop@m1 ~]$ logout
Connection to m1.daddylabs.com closed.
[hadoop@m1 ~]$ ssh m1.daddylabs.com hostname
m1.daddylabs.com
[hadoop@m1 ~]$ ssh m1 date
Tue May 26 04:57:34 UTC 2015
[hadoop@m1 ~]$ 

3. on host m1 enable password less ssh logins into hosts m2, m3 and m4

for i in 51 52 53 54
do
	ip=10.10.10.$i
	ssh-copy-id $ip
done

for h in m1 m2 m3 m4
do
	ssh-copy-id $h
done

for h in m1 m2 m3 m4
do
	ssh-copy-id $h.daddylabs.com
done

verify the following work without asking for a password


for i in 51 52 53 54
do
	ip=10.10.10.$i
	ssh $ip date
done

for i in 51 52 53 54
do
	ip=10.10.10.$i
	ssh $ip date
done

for h in m1 m2 m3 m4
do
	ssh $h.daddylabs.com date
done


1. install wget to download java

	yum -y --disableplugin=fastestmirror wget


1. install java from lab ftp server

[hadoop@m1 ~]$ wget ftp://10.10.10.10/pub/java/jdk-6u45-linux-x64-rpm.bin
--2015-05-26 05:30:20--  ftp://10.10.10.10/pub/java/jdk-6u45-linux-x64-rpm.bin
           => “jdk-6u45-linux-x64-rpm.bin”
Connecting to 10.10.10.10:21... connected.
Logging in as anonymous ... Logged in!
==> SYST ... done.    ==> PWD ... done.
==> TYPE I ... done.  ==> CWD (1) /pub/java ... done.
==> SIZE jdk-6u45-linux-x64-rpm.bin ... 68881069
==> PASV ... done.    ==> RETR jdk-6u45-linux-x64-rpm.bin ... done.

2015-05-26 05:30:26 (11.2 MB/s) - “jdk-6u45-linux-x64-rpm.bin” saved [68881069]

[hadoop@m1 ~]$ chmod +x jdk-6u45-linux-x64-rpm.bin 
[hadoop@m1 ~]$ sudo ./jdk-6u45-linux-x64-rpm.bin
Unpacking...
Checksumming...
Extracting...
UnZipSFX 5.50 of 17 February 2002, by Info-ZIP (Zip-Bugs@lists.wku.edu).
  inflating: jdk-6u45-linux-amd64.rpm  
  inflating: sun-javadb-common-10.6.2-1.1.i386.rpm  
  inflating: sun-javadb-core-10.6.2-1.1.i386.rpm  
  inflating: sun-javadb-client-10.6.2-1.1.i386.rpm  
  inflating: sun-javadb-demo-10.6.2-1.1.i386.rpm  
  inflating: sun-javadb-docs-10.6.2-1.1.i386.rpm  
  inflating: sun-javadb-javadoc-10.6.2-1.1.i386.rpm  
Unpacking JAR files...
	rt.jar...
	jsse.jar...
	charsets.jar...
	tools.jar...
	localedata.jar...
	plugin.jar...
	javaws.jar...
	deploy.jar...
Installing JavaDB
 
Done.
[hadoop@m1 ~]$ type java
java is /usr/bin/java
[hadoop@m1 ~]$ which java
/usr/bin/java
[hadoop@m1 ~]$ whereis java
java: /usr/bin/java
[hadoop@m1 ~]$ ls -l /usr/bin/java
lrwxrwxrwx 1 root root 26 May 26 05:31 /usr/bin/java /usr/java/default/bin/java

[hadoop@m1 ~]$ ls -l /usr
total 64
dr-xr-xr-x.  2 root root 12288 May 26 05:31 bin
drwxr-xr-x.  2 root root  4096 Sep 23  2011 etc
drwxr-xr-x.  2 root root  4096 Sep 23  2011 mgames
drwxr-xr-x.  3 root root  4096 May 25 10:05 include
drwxr-xr-x   3 root root  4096 May 26 05:31 java
dr-xr-xr-x.  9 root root  4096 May 25 10:05 lib
dr-xr-xr-x. 25 root root 12288 May 26 04:38 lib64
drwxr-xr-x. 10 root root  4096 May 26 04:38 libexec
drwxr-xr-x. 12 root root  4096 May 25 10:04 local
dr-xr-xr-x.  2 root root  4096 May 26 04:29 sbin
drwxr-xr-x. 63 root root  4096 May 26 04:38 share
drwxr-xr-x.  4 root root  4096 May 25 10:04 src
lrwxrwxrwx.  1 root root    10 May 25 10:04 tmp

